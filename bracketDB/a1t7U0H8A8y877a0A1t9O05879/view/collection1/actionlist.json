{
    "view": "View?id=actionlist;class=box-shadow flex column;actionlistStyles();[click:body?hideActionListOnBodyClick()];[mouseleave?hideActionList()];[mouseenter?unhideActionList()]",
    "children": [
        {
            "view": "Icon?styles():[fontSize='1.7rem';tooltip=new;name=bi-plus];createDroplistItems();[click:droplist?insertHandler():[key='';value='']]?data().type()=map||=list"
        },
        {
            "view": "Icon?styles():[tooltip=child;name=bi-diagram-3];createDroplistItems();[click:droplist?insertHandler():[key=children;value=:[view='']]]?data().type()=map||=list;[!data().keys().inc():chlidren]"
        },
        {
            "view": "Icon?styles():[tooltip=copy;name=bi-files];mininote:[note=copied!;timer=2000];[click?copyData()]"
        },
        {
            "view": "Icon?styles():[tooltip=paste;name=bi-clipboard];createDroplistItems();[click:droplist?insertHandler():[key=copiedFileName:();value=copiedData:().clone()]]?copiedData:()"
        },
        {
            "view": "Icon?styles():[tooltip=export;name=bi-upload];[click?exportData()]?data().type()=map||data().type()=list"
        },
        {
            "view": "View?class=pointer flexbox;tooltip.text=import;style:[overflow=hidden;position=relative;height=3.5rem;width=3.5rem;borderRadius=.25rem;backgroundColor=inherit];hover.style:[backgroundColor=#f6f6f6];createDroplistItems();[click:droplist?2ndChild().():[droplistIndexClicked=clicked().txt().num();click()]]?data().type()=map||data().type()=list",
            "children": [
                {
                    "view": "Icon?styles():[tooltip=import;name=bi-download];style.pointerEvents=none"
                },
                {
                    "view": "Input?input:[type=file];style:[height=10rem;width=10rem;position=absolute;zIndex=-1;opacity=0;pointerEvents=none];[change?read():[file=file();type=json]:[importData()]]"
                }
            ]
        },
        {
            "view": "Icon?styles():[fontSize='1.7rem';tooltip=remove;name=bi-trash];[click?removeView()]"
        }
    ],
    "__props__": {
        "id": "71f7V1c0V3A330O7B8a6d466V9",
        "doc": "actionlist",
        "counter": 6,
        "creationDate": 1710330786469,
        "collection": "view",
        "chunk": "chunk1",
        "lastModified": 1721983688663,
        "dev": false,
        "actions": {
            "updateNextSiblingsIndexesForPush": "if():[data().type()=list]:[():[actionlistCaller:()].parent().next().1stChild().children().slice():[_.index?_.index.type()=number?clicked().txt().num()]._():[theIndex:()=_.path().lastIndex();theNewValue:()=_.path().lastEl().num()+1;_.1stChild().2ndChild().txt()=theNewValue:();updateCommentAndClose();_.deepChildren()._():[_.path().[theIndex:()]=theNewValue:()]]]",
            "updateNextSiblingsIndexesForErase": "if():[():[actionlistCaller:()].3rdParent().data().type()=list]:[():[actionlistCaller:()].2ndParent().nextSiblings()._():[theIndex:()=_.path().len()-1;theNewValue:()=_.path().[-1].num()-1;_.1stChild().2ndChild().txt()=theNewValue:()]]",
            "addData": "if():[data().type()=map]:[if():[data().[_.key]]:[_.key+='(1)'];data().[_.key]=_.value].elif():[data().type()=list]:[data().push():[_.value]:[_.index?_.index.type()=number?clicked().txt().num()]]",
            "insertView": "if():[():[actionlistCaller:()].mainMapContainer]:[().container=():[actionlistCaller:()].2ndParent();().theView=():[actionlistCaller:()].2ndParent()]:[().container=():[actionlistCaller:()].parent().next().1stChild();().theView=():[actionlistCaller:()].3rdParent()];().container.insert():[log():'here1';view=().theView;log():'here2';preventDefault;viewPath=:children:1;path=if():[data().type()=list]:[path().clone().push():[_.index?_.index.type()=number?clicked().txt().num()]]:[path().clone().push():[_.key]];if():[():[actionlistCaller:()].mainMapContainer]:[index=[_.index?_.index.type()=number?clicked().txt().num()]+1]:[index=[_.index?_.index.type()=number?clicked().txt().num()]];log():[.]:[path()]]:[_.view.input().focus()]",
            "importData": "insertHandler():[key=_.data.name.split():'.json'.0;value=_.data.data.clone();index=().droplistIndexClicked]",
            "hideActionListOnBodyClick": "mouseleave()?!contains():[clicked()];!clicked().classList().inc():'actionlister'",
            "pushToUndo": "undoEdit:().[openDoc:()+'/'+openCollection:()]||=:;if():[():actionlist.prev_value!=():actionlist.form()]:[undoEdit:().[openDoc:()+'/'+openCollection:()].push():[openDoc=openDoc:();openCollection=openCollection:();value=():actionlist.form().clone();prev_value=():actionlist.prev_value]]",
            "createDroplistItems": "droplistLength:()=data().len();droplistItems:()=:;while():[droplistLength:()>-1]:[droplistItems:().push():[droplistLength:()];droplistLength:()--];droplist:[items=droplistItems:();placement=left;align=center;readonly;preventDefault]",
            "exportData": "export():[type=json;data=data().clone();name=path().lastEl()||openDoc:()]",
            "copyData": "copiedData:()=data().clone();copiedFileName:()=path().lastEl()",
            "hideActionList": "clearTimer():[actionlistTimer:()];actionlistTimer:()=timer():[():actionlist.():[children().():[style().pointerEvents=none];style():[opacity=0;transform='scale(0.5)';pointerEvents=none]]]:400",
            "updateIndexColumn": "():dataViewer.children().find():[openDoc=openDoc:();openCollection=openCollection:()].1stChild().1stChild().refresh()",
            "removeView": "decrementCommentAndClosed():[path=path()];updateNextSiblingsIndexesForErase();():[actionlistCaller:()].2ndParent().rem();pushToUndo()",
            "highlightTab": "():dataViewerBar.children().find():[openCollection=openCollection:();openDoc=openDoc:()].2ndChild().style().border=1px solid #888",
            "updateCommentAndClose": "_.class():'Map'._():[openData:().__props__.comments.find():[path=_.path()].path.[theIndex:()]=theNewValue:();openData:().__props__.collapsed.find():[path=_.path()].path.[theIndex:()]=theNewValue:()]",
            "unhideActionList": "clearTimer():[actionlistTimer:()]",
            "styles": "style:[height=3.5rem;width=3.5rem;borderRadius=.25rem;backgroundColor=inherit;fontSize=[_.fontSize||'1.4rem']];hover.style:[backgroundColor=#f6f6f6];class=pointer flexbox;tooltip.text=_.tooltip;name=_.name",
            "actionlistStyles": "style:[width=fit-content;transition='opacity .2s, transform .2s';height=fit-content;overflowY=auto;maxWidth=40rem;transform=scale(0.5);opacity=0;pointerEvents=none;position=fixed;padding=.2rem;borderRadius=.5rem;backgroundColor=#fff;zIndex=999]",
            "insertHandler": "incrementCommentAndClosed():[path=path().clone().push():[_.index?_.index.type()=number?clicked().txt().num()]];addData();updateNextSiblingsIndexesForPush();insertView();pushToUndo()",
            "incrementCommentAndClosed": {
                "_": "highlightTab();incrementNextComments();incrementNextCollapsed()",
                "incrementNextComments": "[openData:().__props__.comments||:].filter():[path.slice():0:[_.path.len()-1]=_.path.slice():0:[-1];path.[_.path.len()-1]>_.path.[-1]]._():[_.path.[_.path.len()-1]+=1]?_.path.len()>0",
                "incrementNextCollapsed": "[openData:().__props__.collapsed||:].filter():[path.slice():0:[_.path.len()-1]=_.path.slice():0:[-1];path.[_.path.len()-1]>_.path.[-1]]._.():[_.path.[_.path.len()-1]+=1]?_.path.len()>0"
            },
            "decrementCommentAndClosed": {
                "_": "highlightTab();removeCurrent();decrementNextComments();decrementNextCollapsed()",
                "decrementNextComments": "[openData:().__props__.comments||:].filter():[path.slice():0:[_.path.len()-1]=_.path.slice():0:[-1];path.[_.path.len()-1]>_.path.[-1]]._():[_.path.[_.path.len()-1]-=1]?_.path.len()>0",
                "decrementNextCollapsed": "[openData:().__props__.collapsed||:].filter():[path.slice():0:[_.path.len()-1]=_.path.slice():0:[-1];path.[_.path.len()-1]>_.path.[-1]]._.():[_.path.[_.path.len()-1]-=1]?_.path.len()>0",
                "removeCurrent": "[openData:().__props__.comments||:].pull():[path.slice():0:[_.path.len()]=_.path];[openData:().__props__.collapsed||:].pull():[path.slice():0:[_.path.len()]=_.path]"
            }
        },
        "comments": [
            {
                "note": "remove",
                "path": [
                    "children",
                    6
                ]
            },
            {
                "note": "plus",
                "path": [
                    "children",
                    0
                ]
            },
            {
                "note": "children",
                "path": [
                    "children",
                    1
                ]
            },
            {
                "note": "copy",
                "path": [
                    "children",
                    2
                ]
            },
            {
                "note": "paste",
                "path": [
                    "children",
                    3
                ]
            },
            {
                "note": "export",
                "path": [
                    "children",
                    4
                ]
            },
            {
                "note": "import",
                "path": [
                    "children",
                    5
                ]
            }
        ],
        "collapsed": [
            {
                "path": [
                    "decrementCommentAndClosed"
                ]
            }
        ],
        "arrange": [],
        "secured": false,
        "size": 7700
    }
}