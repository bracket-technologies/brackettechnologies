{
    "view": "View:ledgerCounterInput?class=flex column;style:[width=100%;position=relative]",
    "children": [
        {
            "view": "customInputLabel"
        },
        {
            "view": "View?class=flex;style:[width=100%;gap=.2rem;zIndex=2]",
            "children": [
                {
                    "view": "View?class=flex;style:[inputStyle()];loaded:[filterGovernmentAccountsBySpecificCode()]",
                    "children": [
                        {
                            "view": "View?class=flexbox;style:[width=5.6rem;height=100%;backgroundColor=#f3f3f3;position=relative]",
                            "children": [
                                {
                                    "view": "Input?preventDefault;().startingScroll=0;placeholder='#';style:[fontSize=1.2rem;width=100%;height=100%;paddingRight=0rem];generalLedgerEventsHandler()"
                                },
                                {
                                    "view": "Icon?name=expand_more;google.symbol;style:[fontSize=1.8rem;color=#666;cursor=pointer;position=absolute;right=-1px];click:[prev().click();prev().focus()]?!generalPopup:().read"
                                }
                            ]
                        },
                        {
                            "view": "View?class=flex;style:[width='calc(100% - 5.6rem)';position=relative];[mouseenter?2ndChild().style():[opacity=1]];[mouseleave?2ndChild().style():[opacity=0]]",
                            "children": [
                                {
                                    "view": "Input?preventDefault;ledgerCounterEventsHandler();style:[fontSize=1.2rem;width=100%;textOverflow=ellipsis;height=100%;paddingRight=0];if():[_.counterInputBlurAction]:[blur:[[_.counterInputBlurAction]()]]"
                                },
                                {
                                    "view": "Icon?name=Close;google.symbol;style:[fontSize=1.8rem;cursor=pointer;color=#666;opacity=0;transition=.2s;paddingRight=.5rem;align-self=center;position=absolute;right=if():[notInSearchEngine()]:[25px]:[0px]];click:[resetLedgerInput()]?!____.read"
                                },
                                {
                                    "view": "Icon?name=Search;google.symbol;style:[fontSize=2rem;color=#666;padding=.5rem;cursor=pointer];tooltip:[text='open search box'];click:[callOpenSearchBox()]?_.generalLedger;notInSearchEngine();!____.read;false"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "view": "View?class=flex",
            "children": [
                {
                    "view": "View?class=flex;style:[overflow=hidden;width=100%;height=1.2rem]?_.showBalance;data().[_.inputPath]",
                    "children": [
                        {
                            "view": "View?class=flex;style:[width=100%;height=1.2rem;backgroundColor=#ddd;borderRadius=0rem 0rem .25rem .25rem;position=absolute;bottom=2px;zIndex=1;align-items=center]",
                            "children": [
                                {
                                    "view": "Text?().balance=selectedAccountsBalance:().find():[ledger=data().[_.inputPath]].balance;if():[!().balance]:[text='Debit = 0';style().color='#3266ff'].elif():[().balance>0]:[text='Debit = '+().balance.price();style().color='#3266ff']:[text='Credit = '+().balance.price().toString().slice():1;style().color='red'];;style:[;#color=if():[selectedAccountsBalance:().find():[ledger=data().[_.inputPath]].balances.0.balance.num()>0]:[blue]:[red];paddingLeft=.5rem;fontSize=.9rem]"
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ],
    "__props__": {
        "id": "l1k7j1p1r0B3n1w3q6D5u2f0V8",
        "doc": "ledgerCounterInput",
        "creationDate": 1711031365208,
        "active": true,
        "createdByUserID": "41V7H078W8I8I780z1m9Y2E4Y2",
        "actions": {
            "keyDownActions": {
                "[object Object]": "if():[e().keyCode=40]:[check();if():[().startingScroll>=250]:[():customDroplist.1stChild().el().scrollTop+=28]:[().startingScroll+=28]].elif():[e().keyCode=38]:[checkArrowDown();if():[().startingScroll<28]:[():customDroplist.1stChild().el().scrollTop-=28]:[().startingScroll-=28]].elif():[e().key=Enter]:[():governmentDroplistItems.children().[selectedIndex:()].click()]",
                "checkArrowUp": "if():[selectedIndex:()<():governmentDroplistItems.children().len()-1]:[selectedIndex:()+=1;():governmentDroplistItems.children().[selectedIndex:()].mouseenter()]",
                "checkArrowDown": "if():[selectedIndex:()>=1]:[selectedIndex:()-=1;():governmentDroplistItems.children().[selectedIndex:()].mouseenter()]",
                "_": "if():[e().keyCode=8]:[checkToDelete()].el;if():[e().keyCode=40]:[checkArrowUp();if():[().startingScroll>=250]:[():customDroplist.1stChild().el().scrollTop+=28]:[().startingScroll+=28]].elif():[e().keyCode=38]:[checkArrowDown();if():[().startingScroll<28]:[():customDroplist.1stChild().el().scrollTop-=28]:[().startingScroll-=28]].elif():[e().key=Enter]:[():governmentDroplistItems.children().[selectedIndex:()].click()]",
                "handleDeleteKey": "e().preventDefault();if():[!txt().in():[2ndParent().ledgerAccounts.():number]]:[txt()=2ndParent().allowedLedgers.0]",
                "checkToDelete": "2ndParent().allowedLedgers._():[if():[txt().toString().slice():0:[_.toString().len()]=_.toString();txt().len()=_.toString().len()]:[e().preventDefault()]]"
            },
            "filterGovernmentAccounts": {
                "noAccountNote": "if():[governmentAccountsItems:().len()=0]:[note():[text='No account found!';type=warning];().txt()=data().[()._.inputPath].toString().split():['/'].0||'';filterGovernmentAccounts()]",
                "filterByName": "2ndParent().ledgerAccounts._():[if():[_.name.toLowerCase().includes():[txt().toLowerCase()]]:[governmentAccountsItems:().push():[_]]]",
                "filterByNumber": "2ndParent().ledgerAccounts._():[if():[[_.number.slice():0:[().txt().len()]=().txt()];[txt()!=''||!2ndParent().allowedLedgers]]:[governmentAccountsItems:().push():[_]]]",
                "_": "if():[2ndParent().ledgerAccounts]:[governmentAccountsItems:()=:;if():[_.searchByNum]:[filterByNumber()]:[filterByName()];#fillAccountNameInText();noAccountNote()]:[governmentAccountsItems:().del()]",
                "#fillAccountNameInText": "if():[__.govInput]:[if():[().txt()='']:[parent().next().1stChild().txt()='']:[parent().next().1stChild().txt()=governmentAccountsItems:().find():[number=().txt()].name]]"
            },
            "callOpenSearchBox": {
                "setsearchBoxParams": "().searchBoxParams=[docName=generalPopup:().docName;collection=account;allowedLedgers=2ndParent().allowedLedgers;varName=[[_.inputPath]='ledgerAccount']];if():[___.path]:[().searchBoxParams.path=___.path;().searchBoxParams.index=path().1]",
                "_": "setsearchBoxParams();openSearchBox():[().searchBoxParams]"
            },
            "getUserAccounts": {
                "saveInGovernmentAccounts": "().ledgerAccounts=:;_.data.values()._():[().ledgerAccounts.push():[[number=_.ledger;name=_.name]]]",
                "_": "().searchFields=[branch=userData:().currentBranch;identifier=account];customSearchEngine():[().searchFields]:[if():[_.success]:[saveInGovernmentAccounts()]:[note():[tex=_.message];danger]]"
            },
            "notInSearchEngine": "createFormStack:();createFormStack:().[-1].searchbox;createFormStack:().len()>0",
            "generalLedgerEventsHandler": {
                "fillLeftZeros": "if():[txt()='';#||!txt().in():[2ndParnt().ledgerAccounts.():number]]:[txt()='']:[txt()=setDefaultleftZero():[text=txt();digits=5]]",
                "saveLedgerInData": {
                    "handelGeneralLedgerInDoc": "if():[parent().next().1stChild().txt()!='']:[;data().[_.inputPath]=txt()+'/'+parent().next().1stChild().txt()]:[data().[_.inputPath]=txt()]",
                    "handelGovInputInDoc": {
                        "_": "if():[txt()!='']:[handleAccountData();parent().next().1stChild().txt()=2ndParent().ledgerAccounts.find():[number=txt()].name]:[parent().next().1stChild().txt()='';data().[_.inputPath].del();3rdParent().next().update()]",
                        "handleAccountData": "data().[_.inputPath]=if():[_.includeLegerAccounts]:[2ndParent().ledgerAccounts.find():[number=txt()].ledger]:[txt()];if():[_.showBalance]:[getAccountBalance():[ledger=data().[_.inputPath];identifier=3rdParent().next().id]]"
                    },
                    "_": "().prevData=data().[_.inputPath]||'';().generalLedgerData=txt();if():[_.govInput]:[handelGovInputInDoc()].elif():[_.generalLedger]:[handelGeneralLedgerInDoc()]"
                },
                "openDroplist": "if():[!().txt()||().txt().num()=0]:[governmentAccountsItems:()=2ndParent().ledgerAccounts]:[filterGovernmentAccounts():[searchByNum=true]];if():[2ndParent().id!=droplistItems:().identifier;_.generalLedger]:[():customDroplist.style():[opacity=0;height=0px]];droplistItems:()=[viewName=governmentDroplistItems;identifier=2ndParent().id;width=2ndParent().el().clientWidth+'px'];().droplistHeight=if():[governmentAccountsItems:().len()>10]:[30]:[[governmentAccountsItems:().len()]*2.8];():customDroplist.update()::[():customDroplist.position():[positioner=2ndParent().id;placement=bottom];():customDroplist.style():[opacity=1;height=[().droplistHeight+'rem']()]]",
                "inputValueHandler": {
                    "splitInputPath": "().accountCounter=[_].split():['/'];txt()=setDefaultleftZero():[text=().accountCounter.0;digits=5];if():[().accountCounter.len()>1]:[parent().next().1stChild().txt()=().accountCounter.1+'/'+if():[().accountCounter.len()=3]:[().accountCounter.2]:['1']]",
                    "checkIfExistValueInDoc": "if():[data().[_.inputPath]]:[checkIfStartWithAllowedLedgers()]:[initializeValue()]",
                    "checkToReadValueFromDoc": "if():[data().[_.inputPath]]:[if():[_.includeLegerAccounts]:[if():[_.referenceCurrency]:[checkIfAccountIncludesSelectedCurrency()]:[readValueFromDoc():[data().[_.inputPath]]]]:[readValueFromDoc():[data().[_.inputPath]]]]:[if():[_.initializeValue]:[initializeValue()]]",
                    "_": "if():[2ndParent().allowedLedgers]:[checkIfExistValueInDoc()]:[checkToReadValueFromDoc()]",
                    "checkIfStartWithAllowedLedgers": "().taha=data().[_.inputPath];().keepLedger=false;2ndParent().allowedLedgers._():[if():[[().taha.split():'/'.0].startsWith():[_]]:[().keepLedger=true]];if():[().keepLedger]:[readValueFromDoc():[().taha]]:[initializeValue()]",
                    "initializeValue": "data().[_.inputPath]=2ndParent().ledgerAccounts.0.ledger||2ndParent().ledgerAccounts.0.number;txt()=setDefaultleftZero():[text=2ndParent().ledgerAccounts.0.number;digits=5];if():[()._.govInput]:[timer():[parent().next().1stChild().txt()=2ndParent().ledgerAccounts.0.name]:0]",
                    "readValueFromDoc": "if():[()._.generalLedger]:[splitInputPath():[_]]:[timer():[txt()=setDefaultleftZero():[text=_.split():'/'.0;digits=5]]:50;timer():[parent().next().1stChild().txt()=2ndParent().ledgerAccounts._find():[_.number.inc():[__.slice():[0]:[-2]]||_.ledger.inc():[__.slice():[0]:[-2]]].name]:10]",
                    "checkIfAccountIncludesSelectedCurrency": "#().ledgerByCurrency.del();2ndParent().ledgerAccounts._():[if():[_.ledger.slice():[0]:[-2]=data().[__.inputPath].slice():[0]:[-2]]:[().ledgerByCurrency=_.ledger]];if():[().ledgerByCurrency]:[data().[_.inputPath]=().ledgerByCurrency;txt()=().ledgerByCurrency.split():['/'].0;readValueFromDoc():[data().[_.inputPath]]]:[data().[_.inputPath].del()];timer():[3rdParent().next().update()]:50"
                },
                "readGeneralLedgerFromData": "if():[data().[_.inputPath]]:[txt()=data().[_.inputPath].split():'/'.0]:[txt()='']",
                "checkToCloseDroplist": "if():[!():customDroplist.contains():[clicked()]]:[():customDroplist.style():[opacity=0;height=0]]",
                "_": "[focus;click?readGeneralLedgerFromData();openDroplist()];keydown:[keyDownActions()];[change?openDroplist();().startingScroll=0;saveLedgerInData();if():[_.entryAction]:[[_.entryAction]()]?e().keyCode!=40;e().keyCode!=38;e().key!=Enter];blur:[fillLeftZeros();checkToCloseDroplist();if():[_.blurAction]:[[_.blurAction]()]];loaded:[inputValueHandler()]"
            },
            "resetLedgerInput": "data().[_.inputPath].del();nthParent():4.update()",
            "ledgerCounterEventsHandler": {
                "saveAccountInDoc": {
                    "handelIfNoLedgerCounter": "if():[[parent().prev().1stChild().txt().num()]!='0']:[saveGeneralLedger()]:[data().[_.inputPath].del();#delFromDoc():[_.inputPath]]",
                    "splitLedgerAndSetFormat": "if():[txt()!='']:[().ledgerList=txt().split():'/';if():[().ledgerList.len()=1]:[txt()=().ledgerList.0+'/1']:[if():[().ledgerList.1='']:[().ledgerList.1='1'];txt()=().ledgerList.0+'/'+().ledgerList.1]]",
                    "saveGeneralLedgerAndLedgerCounter": "data().[_.inputPath]=if():[txt()!='']:[data().[_.inputPath].split():'/'.0+'/'+txt()]:[data().[_.inputPath].split():'/'.0]",
                    "_": "().prevData=data().[_.inputPath]||'';#splitLedgerAndSetFormat();if():[data().[_.inputPath];txt()]:[saveGeneralLedgerAndLedgerCounter()];#:[handelIfNoLedgerCounter()]"
                },
                "setLedgerCounter": "if():[txt()!='']:[().ledgerList=txt().split():'/';txt()=[().ledgerList.0.num()]+'/'+[().ledgerList.1||1]]",
                "_": "if():[_.generalLedger]:[placeholder='----/-';#focus:[setLedgerCounter()];entry:[remChar()];blur:[saveAccountInDoc()]]:[keydown:[keyDownActions()];blur:[saveLedgerInData();txt()=governmentAccountsItems:().value().name];[change;click?openDroplist()?e().keyCode!=38;e().keyCode!=40;e().key!=Enter]]",
                "remChar": "().checkChar=txt().split():'/';if():[![().checkChar.0.num()].isNum()]:[().checkChar.0=[().checkChar.0.slice()::-1]];if():[().checkChar.len()>1]:[if():[!().checkChar.1.num().isNum()]:[().checkChar.1=().checkChar.1.slice()::-1];txt()=().checkChar.0+'/'+().checkChar.1]:[txt()=().checkChar.0]",
                "openDroplist": "if():[!().txt()]:[governmentAccountsItems:()=2ndParent().ledgerAccounts]:[filterGovernmentAccounts():[filterByName=true]];if():[2ndParent().id!=droplistItems:().identifier;_.generalLedger]:[():customDroplist.style():[opacity=0;height=0px]];droplistItems:()=[viewName=governmentDroplistItems;identifier=2ndParent().id;width=2ndParent().el().clientWidth+'px'];().droplistHeight=if():[governmentAccountsItems:().len()>10]:[30]:[[governmentAccountsItems:().len()]*2.8];():customDroplist.update()::[():customDroplist.position():[positioner=2ndParent().id;placement=bottom];():customDroplist.style():[opacity=1;height=[().droplistHeight+'rem']()]]",
                "saveLedgerInData": "().prevData=data().[_.inputPath]||'';data().[_.inputPath]=if():[_.includeLegerAccounts]:[governmentAccountsItems:().value().ledger];if():[_.showBalance]:[getAccountBalance():[ledger=data().[_.inputPath];identifier=3rdParent().next().id]];parent().prev().1stChild().txt()=setDefaultleftZero():[text=governmentAccountsItems:().value().number;digits=5]"
            },
            "filterGovernmentAccountsBySpecificCode": {
                "handleIncludeLegerAccountsConditions": "_.includeLegerAccounts._():[if():[customCondition():[data=doc().clone();condition=_.condition]]:[__.startsWith=_.startsWith;().appliedStartsWith=_.startsWith]];allLedgersAccounts:()._():[if():[_.startsWith.inc():[().appliedStartsWith]||().appliedStartsWith='all']:[().ledgerAccounts.push():[ledger=_.ledgerAccount.[_.currency.indexOf():[[__.referenceCurrency]()]];name=_.name;ledger=_.ledger;number=_.generalLedger]]]",
                "filterByAllowedLedgers": "().ledgerAccounts=:;governmentAccounts:()._():[__.allowedLedgers._():[if():[__.number.slice():0:[[_].toString().len()]=_.toString()]:[().ledgerAccounts.push():[__]]]];",
                "handleGeneralCondition": "if():[[_.allowedLedgers.condition]()]:[().allowedLedgers=_.allowedLedgers.allowedLedgers;filterByAllowedLedgers():[allowedLedgers=().allowedLedgers]]:[().ledgerAccounts=governmentAccounts:()]",
                "fillLedgerAccountsInDroplist": "_.data.values()._():[().ledgerAccounts.push():[name=_.name;number=_.ledgerAccount.split():'/'.value();ledger=_.ledgerAccount]]",
                "handleListOfMap": "_.allowedLedgers._():[if():[customCondition():[data=doc().clone();condition=_.condition]]:[if():[_.allowedLedgers]:[().allowedLedgers=_.allowedLedgers];if():[_.notAllowedLedgers]:[().notAllowedLedgers=_.notAllowedLedgers]]];if():[().allowedLedgers]:[filterByAllowedLedgers():[allowedLedgers=().allowedLedgers];if():[().notAllowedLedgers]:[pullNotAllowedLedgers()]]:[().ledgerAccounts=governmentAccounts:();if():[().notAllowedLedgers]:[pullNotAllowedLedgers()]]",
                "pullNotAllowedLedgers": "().ledgerAccounts._():[().notAllowedLedgers._():[if():[__.number.slice():0:[_.len()]=_]:[().ledgerAccounts.find():[number=__.number]='']]];().ledgerAccounts.filter()",
                "_": "if():[_.allowedLedgers]:[if():[_.allowedLedgers.type()=map]:[handleGeneralCondition()].elif():[_.allowedLedgers.0.type()=map]:[handleListOfMap()]:[().allowedLedgers=_.allowedLedgers;filterByAllowedLedgers():[allowedLedgers=_.allowedLedgers]]].elif():[_.includeLegerAccounts.type()=array]:[handleIncludeLegerAccountsConditions()].elif():[_.includeLegerAccounts.type()=map]:[filterAccountsByStartsWith()].elif():[_.sheetName]:[getSheetData()]:[().ledgerAccounts=governmentAccounts:()]",
                "filterAccountsByStartsWith": "_.startsWith=_.includeLegerAccounts.startsWith;allLedgersAccounts:()._():[if():[_.startsWith.inc():[__.includeLegerAccounts.startsWith.toString()]||__.includeLegerAccounts.startsWith='all';[[__.referenceCurrency]()].in():[_.currency]||!__.referenceCurrency]:[().ledgerAccounts.push():[ledger=if():[__.referenceCurrency]:[_.ledgerAccount.[_.currency.indexOf():[[__.referenceCurrency]()]]]:[_.ledgerAccount.0];name=_.name;ledger=_.ledger;number=_.generalLedger]]]",
                "getSheetData": "dropListFromSheet():[name=_.sheetName]:[sheetData:().[__.sheetName]=_.data;_.data.data._():[().ledgerAccounts.push():[number=_.[___.headerAsCode];name=_.[___.headerAsText]]]]"
            }
        },
        "collapsed": [
            {
                "path": [
                    "#ledgerInputValueHandler"
                ]
            },
            {
                "path": [
                    "inputValueHandler"
                ]
            },
            {
                "path": [
                    "#saveAccountInDoc"
                ]
            },
            {
                "path": [
                    "#keyDownActions"
                ]
            },
            {
                "path": [
                    "#inputValueHandler"
                ]
            },
            {
                "path": [
                    "#readFromDoc"
                ]
            },
            {
                "path": [
                    "generalLedgerEventsHandler",
                    "uuuinputValueHandler"
                ]
            },
            {
                "path": [
                    "#openSearchBox"
                ]
            },
            {
                "path": [
                    "generalLedgerEventsHandler",
                    "#keyDownActions"
                ]
            },
            {
                "path": [
                    "callOpenSearchBox"
                ]
            },
            {
                "path": [
                    "getUserAccounts"
                ]
            },
            {
                "path": [
                    "children",
                    0
                ]
            },
            {
                "path": [
                    "filterGovernmentAccounts"
                ]
            },
            {
                "path": [
                    "filterGovernmentAccountsBySpecificCode"
                ]
            },
            {
                "path": [
                    "keyDownActions"
                ]
            },
            {
                "path": [
                    "ledgerCounterEventsHandler",
                    "saveAccountInDoc"
                ]
            },
            {
                "path": [
                    "children",
                    2
                ]
            },
            {
                "path": [
                    "ledgerCounterEventsHandler"
                ]
            }
        ],
        "comments": [
            {
                "note": "switch",
                "path": [
                    "children",
                    1,
                    "children",
                    1
                ]
            },
            {
                "note": "ledger input (name or counter)",
                "path": [
                    "children",
                    1,
                    "children",
                    0,
                    "children",
                    1
                ]
            },
            {
                "note": "ledger number",
                "path": [
                    "children",
                    1,
                    "children",
                    0,
                    "children",
                    0
                ]
            },
            {
                "note": "label",
                "path": [
                    "children",
                    0
                ]
            },
            {
                "note": "input",
                "path": [
                    "children",
                    1
                ]
            },
            {
                "note": "",
                "path": [
                    "inputValueHandler"
                ]
            },
            {
                "note": "().allowedLedgers:initialized if condition applied (contains the allowed start ledgers-read from _);    ().ledgersAccounts:contains all allowed ledgers in the droplist",
                "path": [
                    "filterGovernmentAccountsBySpecificCode"
                ]
            },
            {
                "note": "openSearchBox in root view",
                "path": [
                    "callOpenSearchBox"
                ]
            },
            {
                "note": "if ledger counet : save data and fill account name : save data",
                "path": [
                    "generalLedgerEventsHandler",
                    "saveLedgerInData"
                ]
            },
            {
                "note": "",
                "path": [
                    "generalLedgerEventsHandler",
                    "inputValueHandler"
                ]
            },
            {
                "note": "balance",
                "path": [
                    "children",
                    2
                ]
            }
        ],
        "dirPath": [],
        "version": 0,
        "counter": 32,
        "secure": false,
        "chunk": "chunk1",
        "collection": "view"
    }
}