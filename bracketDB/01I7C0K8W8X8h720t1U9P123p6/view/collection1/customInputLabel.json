{
    "view": "View:customInputLabel?class=flex;style:[padding=.4rem;textAlign=start;gap=.4rem;justifyContent=space-between;height=2.6rem]?_.inputLabel;![_.duplicatedInputPath;path().[-1]!=0]",
    "children": [
        {
            "view": "View?class=flex;style:[textAlign=start;gap=.4rem;overflow=hidden]",
            "children": [
                {
                    "view": "Text?inputLabelHandler();style:[if():[_.hotCreatable||_.sheetName;!generalPopup:().read;!_.hideHotCreate]:[text-decoration=underline;cursor=pointer];fontSize=1.3rem;color=if():[_.required]:[handleRequiredLabel()];textAlign=start;text-overflow=ellipsis;overflow=hidden;whiteSpace=nowrap;fontSize=1.2rem;if():[_.lableStyle]:[[_.lableStyle].flat()]];if():[_.hotCreatable||_.sheetName;!_.hideHotCreate]:[handleHotCreatableEvents()];tooltip:[text=txt();#if():[_.question]:[_.inputLabel+'ï¼Ÿ']:[_.inputLabel]]?!_.editableLabel"
                },
                {
                    "view": "Text?text=' *';style:[fontSize=1.3rem;color=#e54643]?customCondition():[data=form();condition=_.required];!generalPopup:().read"
                }
            ]
        },
        {
            "view": "View?class=flex;style:[marginTop=auto]",
            "children": [
                {
                    "view": "View?class=flexbox;style:[height=1.4rem;width=1.4rem;borderRadius=50%;border=1px solid #ddd;cursor=if():[_.noteClickAction]:[pointer]:[help];justifyContent=center;alignItems=center];if():[_.tooltip]:[tooltip:[text=_.tooltip]];if():[_.noteClickAction]:[[_.noteClickAction()]()]?_.note",
                    "children": [
                        {
                            "view": "Icon?name=priority_high;google.symbol;style:[fontSize=1rem;color=#555]"
                        }
                    ]
                },
                {
                    "view": "View?class=flexbox;style:[height=2rem;width=2rem;borderRadius=.2rem;border=1px solid #ddd;cursor=pointer];click:[openHotCreateForm()]?_.labelHotCreateable;false",
                    "children": [
                        {
                            "view": "Icon?name=Add;google.symbol;style:[fontSize=1.5rem]"
                        }
                    ]
                },
                {
                    "view": "[View]:[data=_.customLabelBtn]?class=flexbox;style:[height=2rem;width=2rem;cursor=pointer;if():[_.containerStyle]:[[_.containerStyle].flat()]];if():[_.tooltip]:[tooltip:[text=_.tooltip]];click:[[_.clickAction]()]?__.customLabelBtn;handleIconsCondition();!generalPopup:().read",
                    "children": [
                        {
                            "view": "Icon?name=_.icon;google.symbol;style:[fontSize=1.5rem;if():[_.style]:[[_.style].flat()]]"
                        }
                    ]
                }
            ]
        }
    ],
    "__props__": {
        "id": "X1U7L1r140e341U3C6Z5h1T9J9",
        "doc": "customInputLabel",
        "counter": 14,
        "creationDate": 1711031365199,
        "collection": "view",
        "chunk": "chunk1",
        "lastModified": 1721902412678,
        "dev": false,
        "actions": {
            "handleRequiredLabel": {
                "handleRequiredCondition": "if():[customCondition():[data=form();condition=_.required]]:[return():['#e54643']]:[return():['#555']]",
                "_": "if():[!generalPopup:().read]:[if():[_.required.type()=array]:[return():[handleRequiredCondition()]]:[return():['#e54643']]]:[return():['#555']]"
            },
            "handleIfListOfMap": "_.allowedLedgers._():[().isTrue=customCondition():[data=form().clone();condition=_.condition];if():[().isTrue]:[().allowedLedger=_.allowedLedgers]];().inputText=if():[().allowedLedger]:[_.inputLabel+' ('+().allowedLedger.join():['-']+')']:[_.inputLabel];().text=().inputText",
            "openexchangeRateView": {
                "_": "setDocValues();setSubGeneralPopupParams();openSubGeneralPopup()",
                "setSubGeneralPopupParams": "subGeneralPopup:()=[docValues=().docValues;borderRadius=0 0 .4rem .4rem;stopFormIds=true;title='Currency Rate';docName=settingsInfo:().exchangeRateInfo.popupInfo.docName;popupName=customForm;inputInfo=settingsInfo:().exchangeRateInfo.createFormInputs.clone();saveAction=settingsInfo:().exchangeRateInfo.saveAction;discardAction=settingsInfo:().exchangeRateInfo.discardAction]",
                "openSubGeneralPopup": "():subGeneralPopup.refresh()::[():subGeneralPopup.style():[visibility=visible;opacity=1];():subGeneralPopup.2ndChild().style():[transform=translateY(0)]]",
                "setDocValues": "().docValues.exchangeRates=[generalPopup:().docName]:().exchangeRates.clone();().docValues.exchangeRates.pullIndex():0;"
            },
            "handleIconsCondition": "if():[_.condition]:[return():[customCondition():[condition=_.condition;data=form()]]]:[return():[true]]",
            "openTaxesForm": {
                "_": "setSubGeneralPopupParams();openSubGeneralPopup()",
                "setSubGeneralPopupParams": "setIdsToUpdate();;setDocValues();subGeneralPopup:()=[viewToUpdate=().ids;dataPath=path().[-1];leftSize=20%;bottomSize=45%;rightSize=20%;borderRadius=0 0 .4rem .4rem;stopFormIds=true;title='Taxes Details';docValues=().docValues;docName=taxesInfo;popupName=customForm;inputInfo=ticketInvoiceInfo:().ticketInvoiceManager.taxesFormInputs.clone()]",
                "openSubGeneralPopup": "():subGeneralPopup.refresh()::[():subGeneralPopup.style():[visibility=visible;opacity=1];():subGeneralPopup.2ndChild().style():[transform=translateY(0)]]",
                "setDocValues": "().docValues=[currency=form().currency;tax1=data().tax1;tax2=data().tax2;tax3=data().tax3;tax4=data().tax4;tax5=data().tax5;tax6=data().tax6;tax7=data().tax7;tax8=data().tax8]",
                "setIdsToUpdate": "().index=:['0.'+path().[-1]+'.0']:['0.'+path().[-1]+'.2'];().index._():[().ids.push():[formIds:().find():[sectionCounter=_].id]]"
            },
            "openUnpaidInvoicesNew": {
                "_": "setFooterList();checkIfValidLedger()",
                "getInvoices": "if():[___.receivablesAndPayablesAccount.slice():0:2='40']:[getInvoicesIfSupplier()]:[getInvoicesIfCustomer()]",
                "getInvoicesIfSupplier": "search():[collection=invoice;find=[status=Confirmed;suppliers.inc=___.receivablesAndPayablesLedgerAccount]]:[if():[_.data.value()]:[setInvoicesDataIfSupplier()]:[note():[text='No unpaid invoices found for this supplier!';warning]]]",
                "getInvoicesIfCustomer": "search():[collection=invoice;find=[status=Confirmed;customerAccount=___.receivablesAndPayablesLedgerAccount]]:[if():[_.data.value()]:[setInvoicesDataIfCustomer()]:[note():[text='No unpaid invoices found for this customer!';warning]]]",
                "setInvoicesDataIfCustomer": "().itemsData=:;_.data.values()._():[if():[_.receivables.remainingAmount>0]:[().itemsData.push():[id=_.id;date=_.invoiceDate;invoiceNumber=_.ref;totalAmount=_.receivables.totalAmount;remainingAmount=_.receivables.remainingAmount]]];if():[().itemsData.len()>0]:[setSubGeneralPopupParams()]:[note():[text='No unpaid invoices found for this customer!';warning]]",
                "setInvoicesDataIfSupplier": "().itemsData=:;_.data.values()._():[if():[_.payables.find():[supplier=_____.receivablesAndPayablesAccount].remainingAmount>0]:[().itemsData.push():[id=_.id;date=_.invoiceDate;invoiceNumber=_.ref;totalAmount=_.payables.find():[supplier=_____.receivablesAndPayablesAccount].totalAmount;remainingAmount=_.payables.find():[supplier=_____.receivablesAndPayablesAccount].remainingAmount]]];if():[().itemsData.len()>0]:[setSubGeneralPopupParams()]:[note():[text='No unpaid invoices found for this supplier!';warning]]",
                "setSubGeneralPopupParams": "subGeneralPopup:()=[path=path().[-2];identifierToUpdate=3rdParent().id;discardAction='closeSubGeneralPopup()';index=path().[-1];doneAction='saveUnpaidedInvoiceInData()';docName=generalPopup:().docName;tablePath=unpaidInvoice;tablePathData=().itemsData;tableDocName=unpaidInvoiceInfo;tableHeaderAndBody=sharedManagersInfo:().invoiceSharedInfo.unpaidInvoiceTable;borderRadius=0 0 .4rem .4rem;stopFormIds=true;title='Unpaid Invoices';noSearchEngine=true;popupName=searchBoxPage;footerList=().footerList];openSubGeneralPopup()",
                "openSubGeneralPopup": "():subGeneralPopup.refresh()::[():subGeneralPopup.style():[visibility=visible;opacity=1];():subGeneralPopup.2ndChild().style():[transform=translateY(0)]]",
                "setFooterList": "unpaidInvoiceInfo:().payment=data().amount||0;unpaidInvoiceInfo:().currency=form().currency;().footerList=:[payment=if():[data().invoicesInfo]:[data().amount]:[0]]",
                "checkIfValidLedger": "if():[[form().type='Receipt Voucher';___.receivablesAndPayablesLedgerAccount.slice():0:2='41']||[form().type='Payment Voucher';___.receivablesAndPayablesLedgerAccount.slice():0:2='40']]:[getInvoices()]:[note():[text='You can not append invoice for this ledger account!';warning]]"
            },
            "handleHotCreatableEvents": {
                "callOpenHotCreateFormForAccount": {
                    "readFromAllowedLedgers": "().getterKeyValue=[path=path();getterKeyValue=_.getterKeyValue];().formManagerData=generalLedgerInfo:().values().find():[ledgerAccountCode.toString()=().codeTypes.0.toString().0];openCreateForm():[getterKeyValue=().getterKeyValue;title=().formManagerData.popupInfo.title;manager=().formManagerData;docName=().formManagerData.popupInfo.docName;docDefaultValues=[ledgerType=_.ledgerType;ledgerAccountName=().formManagerData.ledgerAccountName]]",
                    "_": "if():[().codeTypes.len()=1]:[readFromAllowedLedgers()]:[readFromDroplistText()]",
                    "readFromDroplistText": "().manager=generalLedgerInfo:().values().find():[ledgerAccountName=().ledger];().getterKeyValue=[path=path();getterKeyValue=_.getterKeyValue];openCreateForm():[getterKeyValue=().getterKeyValue;title=().manager.popupInfo.title;docName=().manager.popupInfo.docName;manager=().manager;docDefaultValues=[ledgerAccountName=().manager.ledgerAccountName]]"
                },
                "_": "mouseenter:[style().color=#3290ff];mouseleave:[if():[_.required]:[style().color=#e54643]:[style().color=#555]];if():[_.collection='account']:[timer():[handleAccountTypeFromAllowedLedgers()]:0];droplist:[preventDefault=true];[click:droplist?().ledger=clicked().txt();callOpenHotCreateFormForAccount()];click:[if():[_.sheetName]:[openSheet()]:[if():[().isSpecificCode]:[callOpenHotCreateFormForAccount()]]]",
                "openSheet": {
                    "setNewCurrentSheetInfo": "().key.push():[_.sheetHeader];().title.push():[_.sheetHeader.capitalize()];currentSheetInfo:()=[name=form().country+' '+_.sheetHeader.capitalize();type=Editable;keys=().key;titles=().title]",
                    "setCurrentSheetInfo": "if():[sheetData:().[[_.sheetName]()]]:[setExistingData()]:[setNewCurrentSheetInfo()]",
                    "requiredInput": "if():[data().[_.requiredInput]]:[loader.show;currentSheetInfo:()='';().key='';().title='';setCurrentSheetInfo();openSheett()]:[note():[text='Select a '+[_.requiredInput]+'!';type=danger]]",
                    "openSheett": "createFormStack:().push():[collection='sheet';selectedSection=selectedSection:()];timer():[generalPopup:()=[sheet;title=Sheet Form;popupName=sheet;currentSheetInfo:().status=hotCreateSheet;inputId=prev().id;uneditableInputs=true];():generalPopup.refresh():[loader.hide];():generalPopup.style():[visibility=visible;opacity=1]]:100",
                    "setExistingData": "currentSheetInfo:()=sheetData:().[[_.sheetName]()]",
                    "_": "if():[_.requiredInput]:[requiredInput()]:[loader.show;currentSheetInfo:()=sheetData:().[_.sheetName];openCreateForm():[manager=bracketSheetTable:().sheetTable;docValues=sheetData:().[[_.sheetName]()]]]"
                },
                "handleAccountTypeFromAllowedLedgers": {
                    "_": "().taha=specificLedger();if():[().taha]:[().droplist.items=getLedgerAccountNamesFromCodes().():ledgerAccountName]:[().isSpecificCode=true]",
                    "specificLedger": {
                        "_": "if():[().appliedCode]:[handleAllowedCode()]:[().codeTypes=generalLedgerInfo:().values().():ledgerAccountCode.filter()]",
                        "handleAllowedCode": "().codeTypes=:;().appliedCode.allowedCode._():[().codeTypes.push():[_.toString().0]];().codeTypes.removeDuplicates();if():[().codeTypes.len()=1]:[return():[false]]:[return():[true]]"
                    },
                    "getLedgerAccountNamesFromCodes": "return():[generalLedgerInfo:().values().filter():[ledgerAccountCode.in():[().codeTypes]]]"
                }
            },
            "inputLabelHandler": {
                "_": "if():[_.allowedCode]:[if():[_.allowedCode.type()=array]:[handleAllowedCodeCondition()]:[().appliedCode=_.allowedCode;setAppliedCode()]]:[if():[_.question]:[text=_.inputLabel+'ï¼Ÿ']:[handleNormalLabel()]];if():[_.hotCreatable;!generalPopup:().read]:[().text='~'+txt()]",
                "handleAllowedCodeCondition": "_.allowedCode._():[().cinditionApplied=customCondition():[data=form().clone();condition=_.condition];if():[().cinditionApplied]:[().appliedCode=_]];setAppliedCode()",
                "handleNormalLabel": "if():[_.inputLabel.type()=array]:[handleLabelCondition()]:[text=_.inputLabel]",
                "handleLabelCondition": "_.inputLabel._():[if():[customCondition():[data=form().clone();condition=_.condition]]:[().text=_.inputLabel]]",
                "setAppliedCode": "txt()=if():[().appliedCode]:[_.inputLabel+' ('+().appliedCode.allowedCode.list().join():['-']+')']:[_.inputLabel]"
            }
        },
        "comments": [
            {
                "note": "add",
                "path": [
                    "children",
                    2
                ]
            },
            {
                "note": "().appliedCode is a variable from inputLableHandler(); it contains the allowed codes for the droplist",
                "path": [
                    "handleHotCreatableEvents",
                    "handleAccountTypeFromAllowedLedgers",
                    "specificLedger"
                ]
            }
        ],
        "collapsed": [
            {
                "path": [
                    "handleHotCeatableEvents",
                    "handleOpenHotCreateFormForAccount",
                    "callOpenHotCreateFormForAccount"
                ]
            },
            {
                "path": [
                    "handleHotCeatableEvents",
                    "handleOpenHotCreateFormForAccount",
                    "specificLedger"
                ]
            },
            {
                "path": [
                    "handleHotCeatableEvents",
                    "handleOpenHotCreateFormForAccount"
                ]
            },
            {
                "path": [
                    "children",
                    2,
                    "children",
                    0
                ]
            },
            {
                "path": [
                    "children",
                    2,
                    "children",
                    1
                ]
            },
            {
                "path": [
                    "children",
                    2
                ]
            },
            {
                "path": [
                    "children",
                    2
                ]
            },
            false,
            {
                "path": [
                    "children",
                    1,
                    "children",
                    0
                ]
            },
            {
                "path": [
                    "children",
                    1,
                    "children",
                    1
                ]
            },
            {
                "path": [
                    "children",
                    1,
                    "children",
                    2
                ]
            },
            {
                "path": [
                    "#openHotCre",
                    "callOpenHotCreateFormForAccount"
                ]
            },
            {
                "path": [
                    "#inputLab"
                ]
            },
            {
                "path": [
                    "handleRequiredLabel"
                ]
            },
            {
                "path": [
                    "handleHotCreatableEvents",
                    "handleAccountTypeFromAllowedLedgers"
                ]
            },
            {
                "path": [
                    "openTaxesForm"
                ]
            },
            {
                "path": [
                    "openUnpaidInvoicesNew"
                ]
            },
            {
                "path": [
                    "openexchangeRateView"
                ]
            },
            {
                "path": [
                    "inputLabelHandler"
                ]
            },
            {
                "path": [
                    "children",
                    0
                ]
            },
            {
                "path": [
                    "children",
                    1
                ]
            },
            {
                "path": [
                    "handleHotCreatableEvents",
                    "callOpenHotCreateFormForAccount"
                ]
            }
        ],
        "arrange": [],
        "secured": false,
        "size": 12968
    }
}