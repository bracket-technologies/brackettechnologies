{
  "view": "View:root?class=column;style:[minHeight=100vh];loaded:[checkSession()]",
  "children": [
    {
      "view": "droplist"
    },
    {
      "view": "note"
    },
    {
      "view": "tooltip"
    },
    {
      "view": "mininote"
    },
    {
      "view": "loader"
    },
    {
      "view": "manifest:().page"
    }
  ],
  "__props__": {
    "id": "C1a7G1x1M0Y391U3T6h5s2F1Q3",
    "doc": "root",
    "creationDate": 1711031365213,
    "active": true,
    "createdByUserID": "41V7H078W8I8I780z1m9Y2E4Y2",
    "actions": {
      "callOpenCreateForm": "if():[createFormStack:().len()>0]:[openCreateForm():[manager=getManagerFromCollection():[collection=_.collection]]]:[openCreateForm():[manager=currentOpenManager:()]]",
      "setDefaultleftZero": "while():[[_.digits]-[_.text.toString().len()]>0]:[_.text=_.text*10];return():[_.text]",
      "openCreateForm": {
        "setGeneralPopup": "setInputInfo();generalPopup:()=[title=_.title||_.manager.popupInfo.title.clone();popupName=[_.manager.popupInfo.view||testCustomForm];inputInfo=().inputInfo;docName=_.docName||_.manager.popupInfo.docName.clone();saveAction=_.manager.saveAction];if():[_.manager.permission]:[generalPopup:().permission=_.manager.permission;generalPopup:().defaultPermission=_.manager.defaultPermission];if():[_.docValues]:[generalPopup:().():[read=_.read;edit=_.edit;createable=_.createable;docValues=_.docValues]];openPopup()",
        "openFirstTime": "():generalPopup.update()::[loader.hide;():generalPopup.style():[visibility=visible;opacity=1]]",
        "openPopup": "if():[createFormStack:().len()=1;!_.back]:[openFirstTime()]:[openStackForms()]",
        "openStackForms": "():generalPopup.2ndChild().style():[transform=if():[!_.back]:[translateX(-100vw)]:[translateX(100vw)]];timer():[():generalPopup.2ndChild().style():[transition=none;opacity=0;transform=if():[!_.back]:[translateX(100vw)]:[translateX(-100vw)]]]:200;timer():[():generalPopup.2ndChild().update()::[loader.hide;():generalPopup.2ndChild().style():[opacity=1;transform=translateX(0)]]]:240",
        "setInputInfo": "if():[_.inputInfo]:[().inputInfo=_.inputInfo.clone()]:[if():[_.manager.createFormInputs.type()=map]:[().inputInfo=_.manager.createFormInputs.clone()]:[().inputInfo=sharedManagersInfo:().[_.manager.createFormInputs].createFormInputs.clone()]];if():[_.docDefaultValues]:[().inputInfo.docDefaultValues=_.docDefaultValues]",
        "_": "if():[!_.back]:[createFormStack:().[-1].():[selectedSection=selectedSection:()];createFormStack:().push():[collection=_.manager.identifier]];loader.show;setGeneralPopup()"
      },
      "toCamelCase": "().sectionId=[_];().camelCase=().sectionId.charAt():[0].toLowerCase();().key=().sectionId.toLowerCase().capitalize().replaceAll():' ':''.replace():[().camelCase.capitalize()]:[().camelCase];return():[().key]",
      "getAllData": {
        "arrangeLedgerAccounts": "().ledgerAccounts=_.data.allLedgersAccounts.values();().ledgerAccounts._():[_.helper=setDefaultleftZero():[text=_.startsWith.[-1];digits=6]];().ledgerAccounts.sort():[path=helper;ascending];return():[().ledgerAccounts]",
        "_": "getDataOnLoad()::[allLedgersAccounts:()=arrangeLedgerAccounts();creditNoteInfo:()=_.data.creditNoteInfo;debitNoteInfo:()=_.data.debitNoteInfo;publicData:()=_.data.publicData;setDueNotifications():[_.notification];sharedManagersInfo:()=_.data.sharedManagersInfo;charterInvoiceInfo:()=_.data.charterInvoiceInfo;tourInvoiceInfo:()=_.data.tourInvoiceInfo;ticketInvoiceInfo:()=_.data.ticketInvoiceInfo;journalsInfo:()=_.data.journalsInfo;paymentVoucherInfo:()=_.data.paymentVoucherInfo;expensesInfo:()=_.data.expensesInfo;receiptVoucherInfo:()=_.data.receiptVoucherInfo;accountingJournalInfo:()=_.data.transaction;generalLedgerInfo:()=_.data.generalLedgerInfo;accountingInfo:()=_.data.accountingInfo;accountingServiceInfo:()=_.data.accountingServiceInfo;bracketSheetTable:()=_.data.bracketSheetTable;collectionsInfo:()=_.data.collectionsInfo.globalPathes.managers;financeManagerInfo:()=_.data.financeManagerInfo;galleryManagerInfo:()=_.data.galleryManagerInfo;governmentAccounts:()=_.data.governmentAccounts.value().data;groupManagerInfo:()=_.data.groupManagerInfo;hotelBookingInfo:()=_.data.hotelBookingInfo;inventoryManagerInfo:()=_.data.inventoryManagerInfo;offerManagerInfo:()=_.data.offerManagerInfo;referenceManagerInfo:()=_.data.referenceManagerInfo;settingsInfo:()=_.data.settingsInfo;tableInfo:()=_.data.tableInfo;printView:()=_.data.printView]"
      },
      "customCondition": {
        "handelIfConditionReferenceExistForOrCondition": "if():[_.conditionReferenceInPath]:[if():[__.data.[__.path].[__.index].[_.conditionReferenceInPath]]:[().isConditionTrue=true]].elif():[_.conditionReferenceInDoc]:[if():[__.data.[_.conditionReferenceInDoc]]:[().isConditionTrue=true]].elif():[conditionReference]:[if():[__.data.[__.path].[__.index].[_.conditionReference]||__.data.[_.conditionReference]]:[().isConditionTrue=true]]",
        "checkConditionInData": "if():[_.condition]:[loopOverCondition()].elif():[_.orCondition]:[loopOverOrCondition()]",
        "handleNotConditionInPath": "if():[_.notCondition.inc():[__.data.[__.path].[__.index].[_.conditionReference]()]]:[().isConditionTrue=false]",
        "checkConditionReferenceTypeInPath": "if():[_.conditionReferenceInPath]:[checkAndConditionOperatorsInPath()].elif():[_.conditionReferenceInDoc]:[checkAndConditionOperatorsInData()].elif():[_.conditionReference]:[if():[__.data.[__.path].[__.index].[_.conditionReference]]:[checkAndConditionOperatorsInPath()]:[checkAndConditionOperatorsInData()]]",
        "handleOrNotConditionInData": "if():[!_.notCondition.inc():[__.data.[_.conditionReference]()]]:[().isConditionTrue=true]",
        "loopOverCondition": "().isConditionTrue=true;_.condition._():[if():[_.condition]:[checkAndConditionOperatorsInData()].elif():[_.notCondition]:[handleNotConditionInData()].elif():[_.conditionReference]:[if():[!__.data.[_.conditionReference]]:[().isConditionTrue=false]].elif():[_.notConditionReference]:[if():[__.data.[_.notConditionReference]]:[().isConditionTrue=false]]]",
        "checkOrConditionReferenceTypeInPath": "if():[_.conditionReferenceInPath]:[checkOrConditionOperatorsInPath()].elif():[_.conditionReferenceInDoc]:[checkOrConditionOperatorsInData()].elif():[_.conditionReference]:[if():[__.data.[__.path].[__.index].[_.conditionReference]]:[checkOrConditionOperatorsInPath()]:[checkOrConditionOperatorsInData()]]",
        "handleNotConditionInData": "if():[_.notCondition.inc():[__.data.[_.conditionReference]]]:[().isConditionTrue=false]",
        "handelIfConditionReferenceExist": "if():[_.conditionReferenceInPath]:[if():[!__.data.[__.path].[__.index].[_.conditionReferenceInPath]]:[().isConditionTrue=false]].elif():[_.conditionReferenceInDoc]:[if():[!__.data.[_.conditionReferenceInDoc]]:[().isConditionTrue=false]].elif():[conditionReference]:[if():[!__.data.[__.path].[__.index].[_.conditionReference];!__.data.[_.conditionReference]]:[().isConditionTrue=false]]",
        "checkOrConditionOperatorsInPath": "if():[_.operator]:[if():[[_.condition+_.operator+__.data.[__.path].[__.index].[_.conditionReference]]()]:[().isConditionTrue=true]]:[if():[_.condition.inc():[__.data.[__.path].[__.index].[_.conditionReference]]]:[().isConditionTrue=true]]",
        "handleOrNotConditionInPath": "if():[_.notCondition.inc():[__.data.[__.path].[__.index].[_.conditionReference]()]]:[().isConditionTrue=true]",
        "checkConditionInPath": "if():[_.condition]:[loopOverConditionInPath()].elif():[_.orCondition]:[loopOverOrConditionInPath()]",
        "loopOverConditionInPath": "().isConditionTrue=true;_.condition._():[if():[_.condition]:[checkConditionReferenceTypeInPath()].elif():[_.notCondition]:[handleNotConditionInPath()]:[handelIfConditionReferenceExist()]]",
        "checkConditionType": "if():[_.path;_.index]:[checkConditionInPath()]:[checkConditionInData()]",
        "checkAndConditionOperatorsInData": "if():[_.operator='!=']:[if():[[_.condition]=[__.data.[_.conditionReference]]]:[().isConditionTrue=false]].elif():[_.operator]:[if():[![_.condition+_.operator+__.data.[_.conditionReference]]()]:[().isConditionTrue=false]]:[if():[!_.condition.inc():[__.data.[_.conditionReference]]]:[().isConditionTrue=false]]",
        "loopOverOrCondition": "().isConditionTrue=false;_.orCondition._():[if():[_.condition]:[checkOrConditionOperatorsInData()].elif():[_.notCondition]:[handleOrNotConditionInData].elif():[_.conditionReference]:[if():[__.data.[_.conditionReference]]:[().isConditionTrue=true]]]",
        "loopOverOrConditionInPath": "().isConditionTrue=false;_.orCondition._():[if():[_.condition]:[checkOrConditionReferenceTypeInPath()].elif():[_.notCondition]:[handleOrNotConditionInPath()]:[handelIfConditionReferenceExistForOrCondition()]]",
        "checkOrConditionOperatorsInData": "if():[_.operator]:[if():[[_.condition+_.operator+_.conditionReference]()]:[().isConditionTrue=true]]:[if():[_.condition.inc():[__.data.[_.conditionReference]]]:[().isConditionTrue=true]]",
        "checkAndConditionOperatorsInPath": "if():[_.operator]:[if():[![_.condition+_.operator+__.data.[__.path].[__.index].[_.conditionReference]]()]:[().isConditionTrue=false]]:[if():[!_.condition.inc():[__.data.[__.path].[__.index].[_.conditionReference]]]:[().isConditionTrue=false]]",
        "_": "checkConditionType();return():[().isConditionTrue]"
      },
      "openSearchBox": {
        "fillSearchEngineInputs": "().group=collectionsInfo:().find():[managers.():collection.inc():[_.collection]];().manager=[().group.groupName]:().[().group.managers.find():[_.collection].manager];setSearchBoxCustomInputs()",
        "pushPathData": "generalPopup:().():[path=_.path;index=_.index]",
        "pushListNameData": "generalPopup:().():[listName=_.listName;maxSelected=_.maxSelected]",
        "setSearchBoxCustomInputs": "if():[().manager.searchEngineInputs.type()=array]:[searchBoxCustomInputs:()=().manager.searchEngineInputs.clone()]:[searchBoxCustomInputs:()=sharedManagersInfo:().[().manager.searchEngineInputs].searchEngineInputs.clone()];if():[_.allowedLedgers]:[searchBoxCustomInputs:().0.allowedLedgers=_.allowedLedgers]:[searchBoxCustomInputs:().0.allowedLedgers.del()]",
        "fillGeneralPopupCommonParams": "generalPopup:().():[title='Search Box';popupName=searchBoxPage;docName=_.docName;collection=_.collection;hideButtons=_.hideButtons;searchEngineDefaultValues=_.searchEngineDefaultValues;autoSearch=_.autoSearch;addFalse=_.addFalse;uploadFalse=_.uploadFalse;downloadFalse=_.downloadFalse;printFalse=_.printFalse]",
        "pushVarNameData": "generalPopup:().():[varName=[_.varName]();maxSelected=1]",
        "_": "if():[!_.back]:[createFormStack:().push():[searchbox=true;[_].flat()]];generalPopup:()=[];if():[_.path]:[pushPathData()];if():[_.varName]:[pushVarNameData()]:[pushListNameData()];fillGeneralPopupCommonParams();if():[_.searchEngineInputs]:[searchBoxCustomInputs:()=_.searchEngineInputs]:[fillSearchEngineInputs()];():generalPopup.update()::[():generalPopup.style():[visibility=visible;opacity=1]]"
      },
      "checkIfOpenPrevForm": {
        "callOpenCreateForm": "openCreateForm():[back=true;manager=getManagerFromCollection():[collection=createFormStack:().at():[-1].collection]]",
        "callSearchBox": "openSearchBox():[back=true;[createFormStack:().[-1]].flat()]",
        "[object Object]": "if():[createFormStack:().len()>1]:[createFormStack:().pullItem():[createFormStack:().at():[-1]];().group=collectionsInfo:().find():[managers.():collection.inc():[createFormStack:().at():[-1]]];manager=[().group.groupName]:().[().group.managers.find():[collection=createFormStack:().at():[-1]].manager];#if():[_.data]:[addResponseInDoc()];updatePopup()]:[closeGeneralPopup()]",
        "_": "if():[createFormStack:().len()>1]:[createFormStack:().pullIndex():[-1];if():[createFormStack:().at():[-1].searchbox]:[callSearchBox()]:[callOpenCreateForm()]]:[createFormStack:()=:;closeGeneralPopup()]"
      },
      "setDueNotifications": "dueNotifications:()=_;():notificationIcon.update();",
      "getManagerFromManagerName": "().group=collectionsInfo:().find():[managers.():manager.inc():[_.manager]];().manager=[().group.groupName]:().[_.manager];return():[().manager]",
      "checkSession": {
        "checkSessionExist": "login():[session=getCookie():session]:[if():[_.success]:[loader.show;getAllData()::[setCookie():[name=session;value=_.session];userData:()=_.data;updateProfileName();():sidebar.update()::[loader.hide];[root():'main'?manifest:().page!=main]]]:[root():login?manifest:().page!=login?loader.hide;eraseCookie():session;note():[text=_.message;danger]]]",
        "updateProfileName": "if():[!mobile()]:[():profileName.txt()=userData:().firstName.capitalize()+' '+userData:().lastName.capitalize();():branchDroplist.txt()=userData:().branch.find():[headQuarter].name]:[():mobileProfileName.txt()=userData:().firstName.0.capitalize()+userData:().lastName.0.capitalize()]",
        "_": "if():[getCookie():session]:[loader.show;checkSessionExist()]:[root():login?manifest:().page!=login]?!userData:()"
      },
      "getManagerFromCollection": "().group=collectionsInfo:().find():[managers.():collection.inc():[_.collection]];().manager=[().group.groupName]:().[().group.managers.find():[collection=_.collection].manager];return():[().manager]",
      "clooossseeed": [
        {
          "path": [
            "customCondition"
          ]
        },
        {
          "path": [
            "checkSession"
          ]
        },
        {
          "path": [
            "checkIfOpenPrevForm"
          ]
        },
        {
          "path": [
            "getAllData"
          ]
        }
      ]
    },
    "collapsed": [
      {
        "path": [
          "getAllData"
        ]
      },
      {
        "path": [
          "checkSession"
        ]
      },
      {
        "path": [
          "customCondition"
        ]
      },
      {
        "path": [
          "openSearchBox"
        ]
      },
      {
        "path": [
          "checkIfOpenPrevForm"
        ]
      }
    ],
    "comments": [
      {
        "note": "_:manager data",
        "path": [
          "openCreateForm"
        ]
      }
    ],
    "folderPath": [],
    "version": 0,
    "counter": 43,
    "secure": false
  }
}